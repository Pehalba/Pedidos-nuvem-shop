#!/usr/bin/env python3
"""
Script de exemplo para demonstrar o uso do Gerenciador de Pedidos
Este script cria alguns pedidos e grupos de exemplo para testar o sistema
"""

import sqlite3
from datetime import datetime

def criar_exemplos():
    """Cria pedidos e grupos de exemplo no banco de dados"""
    
    # Conectar ao banco de dados
    conn = sqlite3.connect('pedidos.db')
    cursor = conn.cursor()
    
    print("üèà Criando dados de exemplo para o Gerenciador de Pedidos...")
    
    # Criar grupos de exemplo
    grupos = [
        ("Grupo 1",),
        ("Grupo 2",),
        ("Grupo 3",)
    ]
    
    cursor.executemany('INSERT INTO grupos (nome) VALUES (?)', grupos)
    print("‚úÖ Grupos criados com sucesso!")
    
    # Criar pedidos de exemplo
    pedidos = [
        # Pedidos com FRETE PADR√ÉO (para grupos)
        ("PED001", "Jo√£o Silva", "Brasil 2024", "M", "FRETE PADR√ÉO"),
        ("PED002", "Maria Santos", "Real Madrid", "G", "FRETE PADR√ÉO"),
        ("PED003", "Pedro Costa", "Barcelona", "P", "FRETE PADR√ÉO"),
        ("PED004", "Ana Oliveira", "Brasil 2024", "GG", "FRETE PADR√ÉO"),
        ("PED005", "Carlos Lima", "Manchester United", "M", "FRETE PADR√ÉO"),
        ("PED006", "Lucia Ferreira", "Brasil 2024", "G", "FRETE PADR√ÉO"),
        ("PED007", "Roberto Alves", "Bayern Munich", "P", "FRETE PADR√ÉO"),
        ("PED008", "Fernanda Rocha", "Real Madrid", "M", "FRETE PADR√ÉO"),
        ("PED009", "Diego Souza", "Barcelona", "GG", "FRETE PADR√ÉO"),
        ("PED010", "Camila Torres", "Brasil 2024", "P", "FRETE PADR√ÉO"),
        
        # Pedidos EXPRESSO (envio direto)
        ("PED011", "Ricardo Mendes", "Brasil 2024", "M", "EXPRESSO"),
        ("PED012", "Juliana Costa", "Real Madrid", "G", "EXPRESSO"),
        ("PED013", "Marcelo Silva", "Barcelona", "P", "EXPRESSO"),
        ("PED014", "Patricia Lima", "Manchester United", "GG", "EXPRESSO"),
        ("PED015", "Thiago Santos", "Bayern Munich", "M", "EXPRESSO"),
    ]
    
    cursor.executemany('''
        INSERT INTO pedidos (id_pedido, nome_cliente, produto, tamanho, tipo_frete)
        VALUES (?, ?, ?, ?, ?)
    ''', pedidos)
    print("‚úÖ Pedidos criados com sucesso!")
    
    # Adicionar alguns pedidos aos grupos
    # Grupo 1: 3 pedidos
    cursor.execute('UPDATE pedidos SET grupo_id = 1 WHERE id_pedido IN ("PED001", "PED002", "PED003")')
    
    # Grupo 2: 2 pedidos
    cursor.execute('UPDATE pedidos SET grupo_id = 2 WHERE id_pedido IN ("PED004", "PED005")')
    
    # Grupo 3: 1 pedido
    cursor.execute('UPDATE pedidos SET grupo_id = 3 WHERE id_pedido = "PED006"')
    
    # Marcar Grupo 1 como enviado
    cursor.execute('UPDATE grupos SET enviado = 1 WHERE id = 1')
    
    print("‚úÖ Pedidos organizados em grupos!")
    print("‚úÖ Grupo 1 marcado como enviado!")
    
    # Commit das altera√ß√µes
    conn.commit()
    conn.close()
    
    print("\nüéâ Dados de exemplo criados com sucesso!")
    print("\nüìä Resumo dos dados criados:")
    print("   ‚Ä¢ 3 grupos criados")
    print("   ‚Ä¢ 15 pedidos criados (10 padr√£o + 5 expresso)")
    print("   ‚Ä¢ 6 pedidos organizados em grupos")
    print("   ‚Ä¢ 1 grupo marcado como enviado")
    print("\nüåê Acesse http://localhost:5000 para ver o sistema funcionando!")

if __name__ == "__main__":
    try:
        criar_exemplos()
    except sqlite3.IntegrityError as e:
        print("‚ö†Ô∏è  Erro: Alguns dados j√° existem no banco.")
        print("   Para recriar os dados, delete o arquivo 'pedidos.db' e execute novamente.")
    except Exception as e:
        print(f"‚ùå Erro ao criar dados de exemplo: {e}")
        print("   Certifique-se de que a aplica√ß√£o foi executada pelo menos uma vez.")
